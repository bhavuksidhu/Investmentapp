"""
Django settings for invest project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import json
import os
import logging
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from djmoney.money import Money

BASE_DIR = Path(__file__).resolve().parent.parent

with open("creds.json", "r", encoding="utf-8") as f:
    creds = json.load(f)
    KITE_CREDS = creds["KITE_CREDS"]
    GMAIL_CREDS = creds["GMAIL_CREDS"]
    FCM_SERVER_KEY = creds["FCM_CREDS"]["server_key"]
    PAYU_CREDS = creds["PAYU_CREDS"]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "859^*a+m2y*=hh#r6w7n0ak^$jw!q)wb+eqvc6+mlaflmt*dry"

# SECURITY WARNING: don't run with debug turned on in production!

if os.name == "nt":
    DEBUG = True
else:
    DEBUG = False

ALLOWED_HOSTS = ["127.0.0.1", "localhost", "invest-thrift.com", "www.invest-thrift.com", "3.109.192.153"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_filters",
    "rest_framework",
    "rest_framework.authtoken",
    "imagekit",
    "drf_spectacular",
    "django_extensions",
    "djmoney",
    "adminpanel",
    "core",
    "api",
    "payment",
    "quizzes",
    "wallets",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # "api.middleware.DenyInactiveUser"
]

ROOT_URLCONF = "invest.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "invest.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "invest",
        "USER": "invest_user",
        "PASSWORD": "(PtWZ5nh}m6]?W8s",
        "HOST": "13.127.229.175",
        "PORT": "5432",
    }
}

REDIS_URL = 'redis://localhost:6379'

CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_TIMEZONE = 'Asia/Kolkata'

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"
DATETIME_FORMAT = '%Y-%m-%dT%H:%M:%S'
USE_L10N = False
USE_TZ = True  # if you plan to use timezone support

USE_I18N = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media/")
if DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, "static_root")
    STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SITE_ID = 1
AUTH_USER_MODEL = "core.User"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Invest Thrift API",
    "DESCRIPTION": "Backend APIs to work with app",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "SCHEMA_PATH_PREFIX": r"/api",
    "COMPONENT_SPLIT_REQUEST": True,
    "PREPROCESSING_HOOKS": ["api.utils.preprocessing_filter_spec"],
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'investthrift@gmail.com'
EMAIL_HOST_PASSWORD = GMAIL_CREDS["app_password"]
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'investthrift@gmail.com'

LOGIN_URL = '/adminpanel/login/'

SUBSCRIPTION_AMOUNT = 69

# TODO Change to True in prod
SECURE_SSL_REDIRECT = False
SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False
SECURE_BROWSER_XSS_FILTER = True

if os.name == 'nt':
    HOST = "127.0.0.1:8000"
else:
    # HOST = "invest-thrift.com"
    HOST = "3.109.192.153"

## DJMONEY
CURRENCIES = ('USD', 'EUR', 'INR')
CURRENCY_CHOICES = [('USD', 'USD $'), ('EUR', 'EUR €'), ('INR', 'INR ₹')]
DEFAULT_CURRENCY = 'INR'
INITIAL_COIN_BALANCE = Money(1500.00, DEFAULT_CURRENCY)

LOGGER = logging.getLogger(__name__)
